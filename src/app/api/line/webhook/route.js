// src/app/api/line/notify-order/route.js
export const runtime = "nodejs";

import { NextResponse } from "next/server";
import { pushMessage } from "../../../lib/line";

/**
 * Endpoint ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏∞‡∏ö‡∏ö‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô
 * ‡∏™‡πà‡∏á‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÑ‡∏õ‡∏¢‡∏±‡∏á admin ‡∏Ñ‡∏ô‡πÄ‡∏î‡∏µ‡∏¢‡∏ß (LINE_ADMIN_USER_ID)
 * ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏î‡πâ‡∏ß‡∏¢ ORDER_WEBHOOK_SECRET ‡∏ú‡πà‡∏≤‡∏ô Header: x-api-key
 *
 * ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á payload:
 * {
 *   "orderId": "ORD-2025-000123",
 *   "total": 29900,
 *   "currency": "THB",
 *   "customer": { "name": "Somchai", "phone": "0812345678" },
 *   "items": [
 *     { "name": "PG Phone V9", "qty": 1, "price": 29900 }
 *   ],
 *   "url": "https://your-admin/orders/ORD-2025-000123"
 * }
 */

const ADMIN_USER_ID = process.env.LINE_ADMIN_USER_ID || "";
const API_KEY = process.env.ORDER_WEBHOOK_SECRET || "";

export async function POST(req) {
  try {
    const key = req.headers.get("x-api-key") || "";
    if (!key || key !== API_KEY) {
      return NextResponse.json({ ok: false, error: "Unauthorized" }, { status: 401 });
    }

    const payload = await req.json().catch(() => ({}));
    const {
      orderId = "",
      total = 0,
      currency = "THB",
      customer = {},
      items = [],
      url = "",
    } = payload || {};

    if (!ADMIN_USER_ID) {
      return NextResponse.json(
        { ok: false, error: "Missing LINE_ADMIN_USER_ID" },
        { status: 500 }
      );
    }

    if (!orderId) {
      return NextResponse.json({ ok: false, error: "orderId required" }, { status: 400 });
    }

    const itemLines = Array.isArray(items)
      ? items
          .slice(0, 10)
          .map((it) => `‚Ä¢ ${it?.name || "-"} x${it?.qty || 1} @ ${Number(it?.price || 0).toLocaleString()} ${currency}`)
          .join("\n")
      : "";

    const text =
      `üßæ ‡∏°‡∏µ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡πÉ‡∏´‡∏°‡πà\n` +
      `Order: ${orderId}\n` +
      (customer?.name ? `‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤: ${customer.name}\n` : "") +
      (customer?.phone ? `‡πÇ‡∏ó‡∏£: ${customer.phone}\n` : "") +
      (itemLines ? `‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤:\n${itemLines}\n` : "") +
      `‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°: ${Number(total).toLocaleString()} ${currency}\n` +
      (url ? `‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î: ${url}\n` : "") +
      `\n(‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡∏™‡πà‡∏á‡∏ñ‡∏∂‡∏á Admin ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô)`;

    await pushMessage(ADMIN_USER_ID, [{ type: "text", text }]);

    return NextResponse.json({ ok: true });
  } catch (e) {
    console.error("Notify Order error:", e);
    return NextResponse.json({ ok: false, error: e?.message || String(e) }, { status: 500 });
  }
}
